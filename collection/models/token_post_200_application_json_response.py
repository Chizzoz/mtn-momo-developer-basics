# -*- coding: utf-8 -*-

"""
    collection

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class TokenPost200ApplicationJsonResponse(object):

    """Implementation of the 'TokenPost200ApplicationJsonResponse' model.

    TODO: type model description here.

    Attributes:
        access_token (string): A JWT token which can be used to authrize
            against the other API end-points. The format of the token follows
            the JWT standard format (see jwt.io for an example). This is the
            token that should be sent in in the Authorization header when
            calling the other API end-points.
        token_type (string): The token type.
        expires_in (int): The validity time in seconds of the token.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "access_token":'access_token',
        "token_type":'token_type',
        "expires_in":'expires_in'
    }

    def __init__(self,
                 access_token=None,
                 token_type=None,
                 expires_in=None):
        """Constructor for the TokenPost200ApplicationJsonResponse class"""

        # Initialize members of the class
        self.access_token = access_token
        self.token_type = token_type
        self.expires_in = expires_in


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        access_token = dictionary.get('access_token')
        token_type = dictionary.get('token_type')
        expires_in = dictionary.get('expires_in')

        # Return an object of this model
        return cls(access_token,
                   token_type,
                   expires_in)


